// let squareWidth = 32;
// const square = new PIXI.Sprite(PIXI.Texture.WHITE);
// square.anchor.set(0.5);
// square.position.set(app.screen.width / 2, app.screen.height / 2);
// square.width = square.height = squareWidth;
// square.tint = 0xea985d;

// app.stage.addChild(square);

// const circle = new PIXI.Graphics();
// circle.beginFill(0xde3249); // Set the fill color for the circle (e.g., a red color)
// circle.drawCircle(0, 0, 50); // Draw the circle with x, y, radius
// circle.endFill();

// // Step 3: Generate a texture from the Graphics object
// const texture = app.renderer.generateTexture(circle);

// // Step 4: Create a sprite using the generated texture
// const circleSprite = new PIXI.Sprite(texture);

// // Optionally, set the position of the sprite
// circleSprite.x = app.screen.width / 2;
// circleSprite.y = app.screen.height / 2;

// app.stage.addChild(circleSprite);

// function changeCircleColor(newColor) {
//   // Clear the previous graphics
//   circle.clear();

//   // Begin a new fill with the new color
//   circle.beginFill(newColor);
//   circle.drawCircle(0, 0, 20); // Assuming the same position and radius as before
//   circle.endFill();

//   // Generate a new texture and update the sprite's texture
//   const newTexture = app.renderer.generateTexture(circle);
//   circleSprite.texture = newTexture;
// }

// // Add an event listener for the 'click' event on the sprite
// circleSprite.interactive = true; // Make the sprite interactive to respond to mouse events
// circleSprite.on("pointerdown", () => {
//   const randomColor = Math.floor(Math.random() * 16777215); // Generate a random color
//   changeCircleColor(randomColor); // Change the circle's color
//   // move circle +10 px to the left
//   circleSprite.x -= 10;
// });
// // drag and drop circle
// circleSprite.interactive = true;
// circleSprite.buttonMode = true;
// circleSprite.anchor.set(0.5);
// circleSprite.x = app.screen.width / 2;
// circleSprite.y = app.screen.height / 2;
// circleSprite.scale.set(1);
// circleSprite
//   .on("pointerdown", onDragStart)
//   .on("pointerup", onDragEnd)
//   .on("pointerupoutside", onDragEnd)
//   .on("pointermove", onDragMove);

// function onDragStart(event) {
//   this.data = event.data;
//   this.alpha = 0.5;
//   this.dragging = true;
// }

// function onDragEnd() {
//   this.alpha = 1;
//   this.dragging = false;
//   this.data = null;
// }

// function onDragMove() {
//   if (this.dragging) {
//     const newPosition = this.data.getLocalPosition(this.parent);
//     this.x = newPosition.x;
//     this.y = newPosition.y;
//   }
// }

// // Add the sprite to the stage if not already added
// app.stage.addChild(circleSprite);
